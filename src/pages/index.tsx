import { SignInButton, useUser } from "@clerk/nextjs";
import Head from "next/head";
import { type RouterOutputs, api } from "~/utils/api";
import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
import Image from "next/image";
import { LoadingPage } from "~/components/loading";
import { useState } from "react";

dayjs.extend(relativeTime);

function Avatar(props: { src: string; author?: string }) {
  return (
    <Image
      className="h-8 w-8 rounded-full"
      src={props.src}
      alt={`${props.author} profile image`}
      height="32"
      width="32"
    />
  );
}

function CreatePostWizard() {
  const { user } = useUser();
  const [input, setInput] = useState("");
  const ctx = api.useContext();
  const { mutate } = api.posts.create.useMutation({
    onMutate: () => {
      ctx.posts.getAll.setData(undefined, (prev) => {
        const opPost = {
          id: Math.random().toString(),
          content: input,
          createdAt: new Date(),
          author: {
            firstName: user!.firstName!,
            id: user!.id,
            profileImageUrl: user!.profileImageUrl,
          },
        };
        setInput("");
        return [opPost, ...(prev ?? [])];
      });
    },
    onSuccess: () => void ctx.posts.getAll.invalidate(),
  });

  if (!user) return null;

  return (
    <form
      className="flex gap-3"
      onSubmit={(event) => {
        event.preventDefault();
        mutate({ content: input });
      }}
    >
      <Avatar src={user.profileImageUrl} author={user.fullName ?? ""} />
      <input
        placeholder="Type some emojis!"
        className="grow bg-transparent outline-none"
        value={input}
        onChange={(e) => setInput(e.target.value)}
      />
      <button>Post</button>
    </form>
  );
}

type PostWithAuthor = RouterOutputs["posts"]["getAll"][number];
function PostView({ author, ...post }: PostWithAuthor) {
  return (
    <div className="flex items-center gap-4 border-b border-slate-400 p-4">
      <Avatar src={author.profileImageUrl} author={author.firstName ?? ""} />
      <div className="flex flex-col gap-1">
        <div className="flex items-center gap-1 text-slate-200">
          <span>{`${author.firstName}`}</span>
          <span>Â·</span>
          <span className="text-sm font-thin">
            {dayjs(post.createdAt).fromNow()}
          </span>
        </div>
        <span className="text-xl">{post.content}</span>
      </div>
    </div>
  );
}

function Feed() {
  const { data, isLoading } = api.posts.getAll.useQuery();

  if (isLoading) return <LoadingPage />;

  if (!data) return <div>Something went wrong...</div>;

  return (
    <div className="flex flex-col">
      {data.map((post) => (
        <PostView key={post.id} {...post} />
      ))}
    </div>
  );
}

export default function Home() {
  const { user, isSignedIn, isLoaded } = useUser();

  // start fetching asap
  api.posts.getAll.useQuery();

  if (!isLoaded) return <div />;

  return (
    <>
      <Head>
        <title>Twitter t3</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center">
        <div className="w-full border-x border-slate-400 md:max-w-2xl">
          <div className="flex flex-col gap-8 border-b border-slate-400 p-4">
            <div className="flex items-center justify-between">
              <h1 className="text-2xl font-medium">Twitter t3</h1>
              <span className="font-extralight">Hello {user?.fullName}</span>
            </div>
            {!isSignedIn ? <SignInButton /> : <CreatePostWizard />}
          </div>
          <Feed />
        </div>
      </main>
    </>
  );
}
